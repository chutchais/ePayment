# docker-compose.yml

version: '3'

services:
  redis:
    container_name: epayment-redis
    image: redis:5.0.6-alpine
    networks:
        - main
    volumes:
        - redis_data:/data
    ports:
        - 6379:6379

  db-server:
    restart: always
    image: postgres:latest
    container_name: epayment-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=epayment_sa
      - POSTGRES_PASSWORD=pAssw0rd!
      - POSTGRES_DB=epayment_db
    networks:
      - main
    volumes:
      - pgdata:/var/lib/postgresql/epayment_db/

  web-server:
    container_name: epayment-server
    restart: always
    build: ./src
    
    links:
      - db-server:postgres
      # - redis:redis
    networks:
      - main
    volumes:
      # - web-django:/usr/src/app
      - web-static:/staticfiles
      - web-media:/media
    # env_file: .env
    command: gunicorn ePayment.wsgi:application -w 2 -b :8000
    # Internal only
    # expose:
    #   - "8000"
    #External ,Removed on July 24,2020
    ports:
      - 80:8000
  
  qcluster:
      build:
          context: ./src
      networks:
          - main
      # links:
      #   - payment-redis:payment-redis
      #   - postgres:postgres
      volumes:
          - web-static:/staticfiles
      command: python manage.py qcluster
      container_name: epayment-qcluster
      depends_on:
          - web-server
      environment:
          - REDIS_URL=redis://redis:6379/0

  # nginx:
  #   container_name: nginx
  #   restart: unless-stopped
  #   build: ./nginx
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     # - ./data/nginx:/etc/nginx/conf.d
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   networks:
  #     - main
  #   depends_on:
  #     - web-server
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # certbot:
  #   container_name: certbot
  #   image: certbot/certbot
  #   restart: unless-stopped
  #   volumes:
  #    - ./data/certbot/conf:/etc/letsencrypt
  #    - ./data/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"





volumes:  
  cache_data:
  web-media:
  web-static:
  pgdata:
  redis_data:

networks:
  main:
